{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELLS\\\\OneDrive\\\\Desktop\\\\chat\\\\src\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Dash.css\";\nimport { database } from \"./firebase\";\nimport { push, ref, onValue } from \"firebase/database\";\nimport { Picker } from \"emoji-mart\"; // Import emoji picker\nimport \"emoji-mart/css/emoji-mart.css\"; // Import emoji picker styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chatRef = ref(database, \"Chat\");\nfunction Dashboard({\n  user\n}) {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    return `${hours}:${minutes < 10 ? \"0\" : \"\"}${minutes}`;\n  };\n  const handleSendMessage = () => {\n    if (inputText.trim() !== \"\") {\n      const userColor = getRandomColor();\n      push(chatRef, {\n        text: inputText,\n        timestamp: Date.now(),\n        sender: \"Aanchal\",\n        backgroundColor: userColor\n      }).then(() => {\n        setInputText(\"\");\n      });\n    }\n  };\n  useEffect(() => {\n    const unsubscribe = onValue(chatRef, snapshot => {\n      const data = snapshot.val();\n      if (data) {\n        const messageArray = Object.values(data);\n        setMessages(messageArray);\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  const getRandomColor = () => {\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"a1\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input-box\",\n        id: \"messageInput\",\n        placeholder: \"Type a message...\",\n        value: inputText,\n        onChange: e => setInputText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowEmojiPicker(!showEmojiPicker),\n        children: \"Emoji\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(Picker, {\n        onSelect: emoji => {\n          // Append the selected emoji to the input text\n          setInputText(prev => prev + emoji.native);\n          setShowEmojiPicker(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chat-input\",\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"a2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        id: \"chatBox\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-box\",\n          style: {\n            backgroundColor: message.backgroundColor,\n            alignSelf: message.sender === user ? \"flex-end\" : \"flex-start\"\n          },\n          children: [message.text, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timestamp\",\n            children: formatTimestamp(message.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"pAdF8B5HNDFMVp0ez30M+eHSuyo=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","database","push","ref","onValue","Picker","jsxDEV","_jsxDEV","chatRef","Dashboard","user","_s","inputText","setInputText","showEmojiPicker","setShowEmojiPicker","messages","setMessages","formatTimestamp","timestamp","date","Date","hours","getHours","minutes","getMinutes","handleSendMessage","trim","userColor","getRandomColor","text","now","sender","backgroundColor","then","unsubscribe","snapshot","data","val","messageArray","Object","values","Math","floor","random","toString","className","children","id","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSelect","emoji","prev","native","map","message","index","style","alignSelf","_c","$RefreshReg$"],"sources":["C:/Users/DELLS/OneDrive/Desktop/chat/src/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Dash.css\";\r\nimport { database } from \"./firebase\";\r\nimport { push, ref, onValue } from \"firebase/database\";\r\nimport { Picker } from \"emoji-mart\"; // Import emoji picker\r\nimport \"emoji-mart/css/emoji-mart.css\"; // Import emoji picker styles\r\n\r\nconst chatRef = ref(database, \"Chat\");\r\n\r\nfunction Dashboard({ user }) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const formatTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    return `${hours}:${minutes < 10 ? \"0\" : \"\"}${minutes}`;\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (inputText.trim() !== \"\") {\r\n      const userColor = getRandomColor();\r\n      push(chatRef, {\r\n        text: inputText,\r\n        timestamp: Date.now(),\r\n        sender: \"Aanchal\",\r\n        backgroundColor: userColor,\r\n      }).then(() => {\r\n        setInputText(\"\");\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onValue(chatRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      if (data) {\r\n        const messageArray = Object.values(data);\r\n        setMessages(messageArray);\r\n      }\r\n    });\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const getRandomColor = () => {\r\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <div id=\"a1\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"input-box\"\r\n          id=\"messageInput\"\r\n          placeholder=\"Type a message...\"\r\n          value={inputText}\r\n          onChange={(e) => setInputText(e.target.value)}\r\n        />\r\n\r\n        {/* Add a button to toggle the emoji picker */}\r\n        <button onClick={() => setShowEmojiPicker(!showEmojiPicker)}>\r\n          Emoji\r\n        </button>\r\n\r\n        {/* Show the emoji picker when it's toggled */}\r\n        {showEmojiPicker && (\r\n          <Picker\r\n            onSelect={(emoji) => {\r\n              // Append the selected emoji to the input text\r\n              setInputText((prev) => prev + emoji.native);\r\n              setShowEmojiPicker(false);\r\n            }}\r\n          />\r\n        )}\r\n\r\n        <button className=\"chat-input\" onClick={handleSendMessage}>\r\n          Send\r\n        </button>\r\n      </div>\r\n\r\n      <div id=\"a2\">\r\n        <div className=\"chat-box\" id=\"chatBox\">\r\n          {messages.map((message, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"message-box\"\r\n              style={{\r\n                backgroundColor: message.backgroundColor,\r\n                alignSelf: message.sender === user ? \"flex-end\" : \"flex-start\",\r\n              }}\r\n            >\r\n              {message.text}\r\n              <div className=\"timestamp\">\r\n                {formatTimestamp(message.timestamp)}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}