{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELLS\\\\OneDrive\\\\Desktop\\\\chat\\\\src\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { database } from \"./firebase\"; // Assuming your Firebase initialization is done in \"./firebase\"\nimport { push, ref, onValue } from \"firebase/database\";\nimport { auth } from \"./firebase\"; // Import the auth object\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chatRef = ref(database, \"Chat\");\nfunction getRandomColor() {\n  return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n}\nfunction Dashboard() {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState(\"\"); // State to store the username\n\n  const logout = () => {\n    localStorage.clear();\n    window.location.reload();\n  };\n  const handleSendMessage = e => {\n    if ((e.key === \"Enter\" || e.type === \"click\") && inputText.trim() !== \"\") {\n      const userColor = getRandomColor();\n      push(chatRef, {\n        text: inputText,\n        timestamp: Date.now(),\n        sender: username,\n        // Use the fetched username\n        backgroundColor: userColor\n      }).then(() => {\n        setInputText(\"\");\n      });\n    }\n  };\n  useEffect(() => {\n    const unsubscribe = onValue(chatRef, snapshot => {\n      const data = snapshot.val();\n      if (data) {\n        const messageArray = Object.values(data);\n        setMessages(messageArray);\n      }\n    });\n\n    // Fetch the username when the component mounts\n    const authUnsubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUsername(user.displayName);\n      } else {\n        // Handle the case where the user is signed out\n        // You can add your logic here\n      }\n    });\n    return () => {\n      unsubscribe();\n      authUnsubscribe();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"innerBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        label: \"Email\",\n        onChange: event => setValues(prev => ({\n          ...prev,\n          email: event.target.value\n        })),\n        placeholder: \"Enter email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Pass\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        label: \"Password\",\n        onChange: event => setValues(prev => ({\n          ...prev,\n          pass: event.target.value\n        })),\n        placeholder: \"Enter Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"error\",\n          children: errorMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: submitButtonDisabled,\n          onClick: handleSubmission,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"google.png\",\n      alt: \"\",\n      style: {\n        height: \"50px\",\n        width: \"250px\",\n        borderRadius: \"10px\"\n      },\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"QuzGc8rUSxkb1bMk1ewI89QlVqo=\");\n_c = Dashboard;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","database","push","ref","onValue","auth","jsxDEV","_jsxDEV","chatRef","getRandomColor","Math","floor","random","toString","Dashboard","_s","inputText","setInputText","messages","setMessages","username","setUsername","logout","localStorage","clear","window","location","reload","handleSendMessage","e","key","type","trim","userColor","text","timestamp","Date","now","sender","backgroundColor","then","unsubscribe","snapshot","data","val","messageArray","Object","values","authUnsubscribe","onAuthStateChanged","user","displayName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","label","onChange","event","setValues","prev","email","target","value","placeholder","pass","errorMsg","disabled","submitButtonDisabled","onClick","handleSubmission","to","src","alt","style","height","width","borderRadius","handleClick","_c","Login","$RefreshReg$"],"sources":["C:/Users/DELLS/OneDrive/Desktop/chat/src/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { database } from \"./firebase\"; // Assuming your Firebase initialization is done in \"./firebase\"\r\nimport { push, ref, onValue } from \"firebase/database\";\r\nimport { auth } from \"./firebase\"; // Import the auth object\r\n\r\nconst chatRef = ref(database, \"Chat\");\r\n\r\nfunction getRandomColor() {\r\n  return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\r\n}\r\n\r\nfunction Dashboard() {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [username, setUsername] = useState(\"\"); // State to store the username\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleSendMessage = (e) => {\r\n    if ((e.key === \"Enter\" || e.type === \"click\") && inputText.trim() !== \"\") {\r\n      const userColor = getRandomColor();\r\n      push(chatRef, {\r\n        text: inputText,\r\n        timestamp: Date.now(),\r\n        sender: username, // Use the fetched username\r\n        backgroundColor: userColor,\r\n      }).then(() => {\r\n        setInputText(\"\");\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onValue(chatRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      if (data) {\r\n        const messageArray = Object.values(data);\r\n        setMessages(messageArray);\r\n      }\r\n    });\r\n\r\n    // Fetch the username when the component mounts\r\n    const authUnsubscribe = onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        setUsername(user.displayName);\r\n      } else {\r\n        // Handle the case where the user is signed out\r\n        // You can add your logic here\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n      authUnsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"innerBox\">\r\n        <h1 className=\"heading\">Login</h1>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          label=\"Email\"\r\n          onChange={(event) =>\r\n            setValues((prev) => ({ ...prev, email: event.target.value }))\r\n          }\r\n          placeholder=\"Enter email address\"\r\n        />\r\n        <label htmlFor=\"Pass\">Password</label>\r\n        <input\r\n          label=\"Password\"\r\n          onChange={(event) =>\r\n            setValues((prev) => ({ ...prev, pass: event.target.value }))\r\n          }\r\n          placeholder=\"Enter Password\"\r\n        />\r\n\r\n        <div className=\"footer\">\r\n          <b className=\"error\">{errorMsg}</b>\r\n          <button disabled={submitButtonDisabled} onClick={handleSubmission}>\r\n            Login\r\n          </button>\r\n          <p>\r\n            Don't have an account?{\" \"}\r\n            <span>\r\n              <Link to=\"/\">Sign up</Link>\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <img\r\n        src=\"google.png\"\r\n        alt=\"\"\r\n        style={{ height: \"50px\", width: \"250px\", borderRadius: \"10px\" }}\r\n        onClick={handleClick}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}